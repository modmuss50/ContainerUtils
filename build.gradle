plugins {
	id 'fabric-loom' version '0.1.0-SNAPSHOT'
}

apply plugin: 'maven'
apply plugin: 'maven-publish'

sourceCompatibility = 1.8
targetCompatibility = 1.8

group = "me.modmuss50"
archivesBaseName = "ContainerUtils"
version = "0.1.0"

def ENV = System.getenv()
if (ENV.BUILD_NUMBER) {
	version = version + "-" + "${ENV.BUILD_NUMBER}"
}

minecraft {
}

dependencies {
	minecraft "com.mojang:minecraft:18w50a"
	mappings "net.fabricmc:yarn:18w50a.33"
	modCompile "net.fabricmc:fabric-loader:0.2.0.70"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modCompile "net.fabricmc:fabric:0.1.1.55"
}

uploadArchives {
	repositories {
		mavenDeployer {
			//This is used when the build is done on a slave node
			if (project.hasProperty('mavenPass')) {
				println 'Uploading to remote Maven Repo'
				repository(url: "http://mavenupload.modmuss50.me/") {
					authentication(userName: "buildslave", password: project.getProperty('mavenPass'))
				}
			} else {
				//this is when the build is executed on the master node
				println 'Uploading to local Maven Repo'
				repository(url: "file:///var/www/maven/")
			}
			pom {
				groupId = project.group
				version = project.version
				artifactId = project.archivesBaseName
			}
		}
	}
}